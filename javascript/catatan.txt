Template literals:
contoh:
`Hasil 1 + 1 adalah ${2 + 1}`

harus menggunakan backtick ``

------------------------------------------------

NOTE: tiap tipe data primitif di dalam js, masing masing nya memiliki methods nya sendiri yg bisa di cek di ndn mozilla / web lain.

beberapa method menerima argument yg bisa mengubah hasilnya. Argument itu mirip seperti inputan yang kita isikan tetapi argument disini kita isikan di dalam tanda kurung. 

contoh:
let movie = 'blacklist'
movie.indexOf('k')
output> 4

-------------------------------------------------

tipe data primitif di dalam js:
- number, ciri ciri nya di dalam javascript:
a. hanya memiliki 1 jenis tipe data yaitu number
b. nilainya bisa bilangan positif
c. nilainya bisa bilangan negatif
d. nilainya bisa seluruh angka (int)
e. nilainya bisa angka desimal

NaN, not a number merepresentasikan bahwa suatu input / hasil proses itu bukan sebuah number / angka, tapi NaN ini juga adalah bagian dari number. NaN akan muncul jika kita mengetikkan seperti dibawah ini di dalam console browser:
0 / 0 menghasilkan NaN.
1 + NaN menghasilkan NaN.

- boolean, hanya berisi true dan false saja.

- string, untuk mengetikkan nilai berupa teks (huruf, nilai, simbol dll) yang dibungkus oleh kutip, baik satu kutip atau dua kutip.
contoh string:
> 'selamat "yaa kamu" hahaha'
> "coba ini' ya"

* string memiliki nilai indeks, seperti pada array. nilai indeks nya dimulai dari 0, contoh:
string    C O D E
indeks    0 1 2 3

cara penggunaan indeks:
let x = "code"
x[0]
output> c

untuk mengetahui panjang indeks dari suatu text:
<namaVariable>.length

contoh concate (penggabungan) teks string:
x = x + 'html'
or
y = x + 'javascript'

    ## String Methods, adalah suatu aksi yg disediakan javascript, saat kita ingin:
    - mencari sebuah huruf / kata
    - menggantikan karakter 
    - mengubah huruf besar / kecil


- null, nilai kosong yg sengaja dibuat karna perlu untuk dibuat.

- undefined, variable yg dibuat tapi belum ada isinya / tidak ada sama sekali. contoh:
let nama;

--------------------------------------------------------------------

* variable pada javascript ->
penulisan variable di javascript:
let namaVariable = nilai;

atau bisa ditulis seperti ini juga

let abadKekosongan;
// lalu kita berikan nilai ke variable abadKekosongan
abadKekosongan = 4000;

## aturan penggunaan nama pada variable di javascript:
1. tidak boleh di awali dengan angka
2. boleh di awali dengan simbol
3. di dalam nama variable nya boleh mengandung simbol, angka, huruf besar dan huruf kecil
4. nama variable dapat dibaca dan dimengerti oleh orang lain


pada variable terutama untuk tipe data number, ada shorthand yg memudahkan kita seperti berikut:

versi awal tanpa shorthand;
let score = 0
score = score + 1
score = score - 1
score = score * 1
score = score / 1
score = score % 1

versi shorthand;
let score = 0
score += 1
score -= 1
score *= 1
score /= 1
score %= 1

di dalam variable juga terdapat increment dan decrement;
score++ adalah increment (penambahan 1)
score-- adalah decrement (pengurangan 1)

score++
score--

* variable const mirip seperti konstanta variable yg nilainya tetap tidak bisa diubah di bahasa pemrograman lain.

penulisan di javascript nya:
const namaVariable = nilai;

const di javascript tidak bisa di deklarasikan tanpa nilai awal.

------------------------------------------------

math object, memiliki banyak fungsi dan properti yg berguna untuk operasi matematika. seperti pembulatan, nilai konstan dan lainnya. untuk mengecek secara langsung ada method apa saja di dalam math object, kita bisa gunakan console di browser dan ketikkan "Math".

-------------------------------------------------

pada javascript dikenal juga beberapa tools yg bermanfaat seperti berikut ini:
* console.log(), punya banyak fungsi dalamnya selain log(), ada warn() untuk peringatan, error() untuk error, dan lain lain. Untuk melihat ada fungsi apa saja bisa ketikkan console pada console di dalam browser, nantinya akan muncul fungsi fungsi nya.

* alert, untuk memberikan peringatan tetapi alert akan muncul di halaman tab yg dibuka dengan sebuah pop up.

* prompt, seperti alert tapi pada prompt kita bisa melakukan input data yg nantinya data tersebut akan muncul di dalam log.

--------------------------------------------------

Array

array adalah deretan / urutan data dari sekumpulan nilai. contoh daftar putar lagu, deretan komentar pada aplikasi tiktok dan lain sebagainya.
cara penulisan array:

let namaArray = [];
NOTE: didalam [] bisa di isikan kumpulan string, kumpulan number, bahkan kumpulan campuran antar string, number dan tipe data lainnya.

* cara mengubah nilai pada array:
namaArray[<posisi yang ingin diganti, berupa number>] = "nilai barunya";

* cara menambah nilai pada array:
namaArray[<posisi yang ingin ditempati nilai baru, berupa number>] = "nilai barunya";


ada banyak method pada array yang bisa dilihat dan dibaca dari website website dokumentasi nya.
# Method pada array
    - push, menambahkan item pada akhir array. contoh: namaArray.push( <nilai> || <nilai1>, <nilai2>, ... <nilaiN>);
    - pop, menghapus item dari paling akhir array. contoh: namaArray.pop();
    - shift, menghapus item dari paling awal array. contoh: namaArray.shift();
    - unshift, menambahkan item pada awal array. contoh: namaArray.unshift( <nilai> || <nilai1>, <nilai2>, ... <nilaiN );

    % Method lain pada array yg sering digunakan.
    - concat, menggabungkan array
    - includes, mencari suatu nilai di dalam array
    - indexOf, sama seperti penggunaan indexOf pada string
    - join, membuat suatu string dari sebuah array
    - reverse, membalikkan urutan nilai dari array
    - slice, menyalin sebagian nilai dari array
    - splice, menghapus / mengubah element array
    - sort, mengurutkan nilai pada array

NOTE: const / konstanta pada array.
const memang bersifat tetap / isi dari variable nya tidak bisa diubah, tapi ini tidak berlaku untuk object dan array, ini karena object pada javascript bersifat mutable, sehingga value dan properti pada object bisa diubah. 
    Kalau kita mengetikkan typeOf di console pada browser seperti berikut:
        let nilai = [20, 30, 40, 50]
        undefined
        typeof nilai
        "object" 
    bisa dilihat bahwa array nilai memiliki tipe object. jadi pada dasarnya array itu adalah object.


* nested array / array berlapis / bersarang / multidimension array
contoh nested array:
    const board = [
        [null, null, '0'],
        ['X', '0', null],
        ['0', null, 'X']
    ]

--------------------------------------------------

* Object, adalah sekumpulan properti yg merupakan sebuah key-value. object ini mirip seperti array tapi bukan array. Cara mengakses suatu object dengan menggunakan custom keys.
format penulisan object nya seperti berikut:
const namaObject = {
    properti-1 / key-1 : value-1,
    properti-2 / key-2 : value-2,
    properti-3 / key-3 : value-3,
    .
    .
    .
    properti-N : value-N,
}

contoh:

const fitnessData = {
    totalSteps      :   21323,
    totalMiles      :   22.24,
    avgCaloriesBurn :   4233,44
}

# contoh pembuatan object:
const barang = {
  judul: 'Sepatu',
    harga: 200000,
    isReady: true,
    size: [38, 39, 40, 41, 42, 43, 44],
    location: {
                indonesia: 49,
                singapore: 33,
                malaysia: 42,
                brunei: 43
            }
}


# Cara memanggil data dari suatu object
namaObject.<properti>;

    contoh:
    barang.judul;
    barang.location.indonesia;
    barang.size[0];


# Cara mengubah data / nilai dan menambah data baru di suatu object

- format mengubah data di object:
namaObject.<properti> = <nilai baru>;
or
namaObject['properti'] = 'nilai baru';


- format menambah data baru di object:
namaObject.<properti baru> = <nilainya>;


# Object di dalam array dan cara mengakses nya

- contoh kita membuat array yg memiliki object seperti dibawah ini:
const shoppingCart1 = [
    {
    product: 'vue js',
    price: 1.22,
    quantity: 3
},
    {
    product: 'react js',
    price: 2.32,
    quantity: 1
},
    {
    product: 'angular.js',
    price: 3.32,
    quantity: 2
}
]

- cara mengakses data object tersebut bisa dengan cara seperti berikut:
shoppingCart1[0];
output>> Object { product: "vue js", price: 1.22, quantity: 3 }

shoppingCart1[1];
output>> Object { product: "react js", price: 2.32, quantity: 1 }

shoppingCart1[1].product;
output>> "react js"

shoppingCart1[1].price;
output>> 2.32 

shoppingCart1[1].quantity;
output>> 1

--------------------------------------------------

* Perulangan, melakukan hal yg sama sebanyak data / kondisi.

Tipe tipe perulangan:
1. for
contoh penulisan:
for   inisial; | kondisi; | increment / decrement
for (let i = 1; i <= 10; i++) {
    console.log(i);
}

2. while
3. for..of
4. for..in

--------------------------------------------------

* Perulangan for dengan array

contoh penulisan:
const animals = ['cat', 'deer', 'bird', 'koala'];

for (let i = 0; i < animals.length; i++) {
    console.log(i, animals[i]);
}

NOTE: setiap melakukan perulangan dengan array, selalu awali "nilai awal dengan 0" dan "batasnya sampai panjang data array" yg akan digunakan.

--------------------------------------------------

* nested loop, bisa terjadi jika kita mendapatkan suatu data array yang di dalamnya ada array lagi.

--------------------------------------------------

* Perulangan menggunakan perintah WHILE.
perulangan while akan terus berjalan selama kondisi tesnya bernilai true.

penulisan nya:
let num = 0;
while (num < 10) {
    console.log(num);
    num++;
}