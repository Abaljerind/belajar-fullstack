* jQuery adalah kumpulan fungsi fungsi javascript yang berguna untuk memudahkan penulisan kode javascript. jQuery punya fitur fitur seperti menyederhanakan document traversing, event handling, animating dan interaksi AJAX untuk mengembangkan sebuah web dengan cepat.

* Manfaat jQuery antara lain:
 - menemukan elemen dalam dokumen HTML
 - mengubah konten HTML
 - mendengarkan (listen) apa yang dilakukan pengguna dan melakukan tindakan yang sesuai (event listener)
 - membuat animasi konten di halaman website
 - berbicara melalui jaringan untuk mengambil konten baru menggunakan AJAX.

* Cara memanggil jQuery -> bisa dengan download file jQuery dari website cdn jQuery atau dengan copas link nya saja berdasarkan versi yang dibutuhkan.

* Contoh penulisan jQuery;
 $(document).ready(function() {
    // kode jQuery
 })

* Tujuan dari penggunaan $(document).ready() adalah untuk memastikan bahwa kode JavaScript atau jQuery di dalamnya dieksekusi setelah dokumen HTML selesai dimuat.

* Untuk mengetahui apakah jQuery sudah bisa digunakan atau tidak setelah dihubungkan dengan file jQuery nya, bisa dengan membuka website nya dibagian console dan ketikkan '$', jika hasil kembaliannya adalah sebuah function (e, t){return new k.fn.init(e,t)} maka itu berarti jQuery sudah berhasil dimuat. 

* Sama dengan javascript biasa, pada jQuery kita bisa melakukan selection pada tiap tiap elemen HTML seperti nama tag, id, atau class. 
Berikut contohnya: 
    - nama tag html
    $("p");

    - id
    $("#container");

    - class
    $(".articles");

* jquery juga bisa melakukan selection seperti pada css, Berikut contohnya;
        $("li:nth-child(1)").text("indonesia"); -> hanya akan mengubah elemen li yang pertama saja.
        $("li.pantai").text("yogya"); -> hanya akan mengubah elemen li yang punya class pantai saja.
        
        NOTE: untuk odd dan even, dihitung mulai dari '0 sebagai ganjil' lalu '1 sebagai genap' dan seterusnya.
        $("li:odd").text('indo'); -> hanya akan mengubah elemen li yang 'ganjil'. 
        $("li:even").text('konoha'); -> hanya akan mengubah elemen li yang 'genap'.

* Beberapa contoh fungsi pada jQuery:
-    $("p").text("Orlando"); -> jika ada lebih dari 1 tag 'p' maka semua tag p tersebut akan diganti teks nya menjadi 'Orlando'.

-    $("p").hide(); -> maka semua tag p akan di hide.

* Menggunakan fungsi traversing untuk melakukan selection.
    - .first() -> memilih 'elemen pertama' dari sekumpulan elemen yang sama.
    - .last() -> kebalikan dari first().
    - .prev() -> memilih elemen 'sebelumnya' dari elemen yang dipilih sebagai titik awal.
    - .next() -> memilih eleemn 'selanjutnya' dari elemen yang dipilih sebagai titik awal.
    - .children() -> memilih elemen anak dari elemen yang dipilih.
    - .find() -> memilih elemen anak (children) dan juga elemen elemen dibawahnya dari elemen anak (children) yang dipilih.
    - .parent() -> memilih elemen parent dari elemen yang dipilih sebagai titik awal.

* Untuk menggunakan fungsi traversing bisa dengan cara seperti berikut:
    $("li").first();

    atau digabung seperti dibawah ini
    
    $("li").first().next().prev().last();

* DOM Manipulation dengan jquery.
 ada beberapa fungsi yang bisa digunakan antara lain;
  - add yang digunakan untuk menambahkan elemen. Add sendiri punya beberapa fungsi di dalam nya;
    # .before(<elemen>) -> digunakan untuk menyisipkan konten tertentu 'sebelum' elemen yang dipilih.
        contoh:
        $(document).ready(function() {
            var price = $('<p>From $399.99</p>');
            $('.vacation').before(price);
        })

    # .after(<elemen>) -> digunakan untuk menyisipkan konten tertentu 'setelah' elemen yang dipilih.
        contoh:
        $(document).ready(function() {
            var price = $('<p>From $399.99</p>');
            $('.vacation').after(price);
        })

    # .append(<elemen>) -> digunakan untuk menyisipkan konten tertentu 'di dalam' elemen yang dipilih dan diletakkan 'dibagian akhirnya'.
        contoh:
        $(document).ready(function() {
            var price = $('<p>From 399.99</p>');
            $('.vacation').append(price);
        })

    # .prepend(<elemen>) -> digunakan untuk menyisipkan konten tertentu 'di dalam' elemen yang dipilih dan diletakkan 'dibagian awalnya'.
        contoh:
        $(document).ready(function() {
            var price = $('<p>From 399.99</p>');
            $('.vacation').prepend(price);
        })

* Alternatif dari fungsi fungsi diatas, hanya dengan penyusunan pemakaian yang berbeda.
    # .insertBefore(<elemen>) = .before()
        contoh:
            price.insertBefore($('.vacation'));

    # .insertAfter(<elemen>) = .after()
        contoh:
            price.insertAfter($('.vacation'));

    # .prependTo(<elemen>) = .prepend()
        contoh:
            price.prependTo($('.vacation));

    # .appendTo(<elemen>) = .append()
        contoh:
            price.appendTo($('.vacation'));

* Get -> digunakan untuk mengambil data elemen di jQuery.
    - .text -> mengembalikan konten teks dari elemen yang dipilih, maksudnya bisa mengganti atau memasukkan teks ke dalam elemen html seperti h1-h6, p dan lain lain
    - .html -> mengembalikan konten elemen yang dipilih, termasuk markup HTML.
        contoh: 
            <h1>Kemana Anda ingin pergi ?</h1>
            <ul class="lokasi">
                <li>Bandung</li>
                <li class="surabaya"><strong>Surabaya</strong></li>
                <li>Jakarta</li>
            </ul>
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
            <script>
                $(document).ready(function()
                    {
                        console.log($('.surabaya').html());
                    });
            </script>
        output => <strong>Surabaya</strong>
    
    - .val -> mengembalikan value pada form
        contoh:
            <h1>Kemana Anda ingin pergi ?</h1>
            <ul class="lokasi">
                <li>Bandung</li>
                <li class="surabaya"><strong>Surabaya</strong></li>
                <li>Jakarta</li>
                <li><input type="text" class="inputan" value="Malang"></li>
            </ul>
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
            <script>
                $(document).ready(function()
                    {
                        console.log($('.inputan').val());
                    });
            </script>
        output => Malang

* SET
    .text(konten) -> mengatur konten teks dari elemen yang dipilih.
    .html(konten) -> mengatur konten elemen yang dipilih termasuk markup HTML nya.
    .val(konten) -> menetapkan atau mengembalikan value pada form.

* Remove -> digunakan untuk mengambil data di jQuery.
    - .remove() -> menghapus elemen (elemen parent) dan elemen di dalamnya / child.
    - .empty() -> menghapus elemen / teks di dalam elemen pembungkusnya saja.
        contoh:
            <h1>Kemana Anda ingin pergi ?</h1>
            <ul class="lokasi">
                <li class="bandung">Bandung</li>
                <li class="surabaya"><strong>Surabaya</strong></li>
                <li>Jakarta</li>
                <li><input type="text" class="inputan" value="Malang"></li>
            </ul>
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
            <script>
                $(document).ready(function()
                {
                $('.bandung').remove();
                $('.surabaya').empty();
                });
            </script>
        output => elemen dengan class .bandung akan dihapus, lalu elemen class .surabaya hanya akan dikosongkan tetapi listnya masih dibiarkan.

* Event Handler -> semua tindakan dari user yang berbeda dimana dapat ditanggapi oleh javascript / jquery disebut sebagai 'event'.
    contoh:
        - menggerakkan mouse diatas elemen.
        - memilih tombol radio.
        - mengklik elemen.

* Beberapa contoh event handler:
    - mouse events -> click, dblclick, mouseenter, mouseleave, dll.
    - keyboard events -> keypress, keydown, keyup dll.
    - form events -> submit, change, focus, blur dll.
    - document / window events -> load, resize, scroll, unload.

    contoh:
        $('#tombolKirim').click(function() {
            // kode
        });

        atau

        $('#tombolKirim').on('click', function() {
            // kode
        });

        NOTE: disarankan menggunakan yang kedua.

* Jenis fitur effect di jQuery
    - Tanpa animasi
        .hide(kecepatan) -> digunakan untuk 'menyembunyikan' elemen yang dipilih
        .show(kecepatan) -> digunakan untuk 'memunculkan' elemen yang dipilih
        .toggle(kecepatan) -> beralih antara 'hide' dan 'show' 

    - Animasi fade
        .fadeIn(kecepatan) -> digunakan untuk 'memunculkan' elemen yang dipilih dengan efek transisi 'muncul' secara perlahan
        .fadeOut(kecepatan) -> digunakan untuk 'menyembunyikan' elemen yang diipili dengan efek transisi 'disembunyikan' secara perlahan
        .fadeToggle(kecepatan) -> beralih antara 'fadeIn' dan 'fadeOut'
        .fadeTo(kecepatan) -> memberikan efek 'opacity' / transparansi suatu elemen.

    - Animasi slide
        .slideDown(kecepatan) -> 'memunculkan' elemen yang dipilih dengan 'efek slide kebawah dari atas'.
        .slideUp(kecepatan) -> 'menyembunyikan' elemen yang dipilih dengan 'efek slide ke atas dari bawah'.
        .slideToggle(kecepatan) -> gabungan antara metode 'slideDown' dan 'slideUp'
    
    - Animasi via CSS
        .animate({parameterCss, kecepatan}) -> menjalankan animasi pada elemen yang dipilih

    Contoh:
        $("#hideBandung").on("click", function () {
          //   $(".bandung").hide();
          //   $(".bandung").fadeOut(2000);
          $(".bandung").slideUp(2000);
        });

        $("#toggleBandung").on("click", function () {
          //   $(".bandung").toggle();
          //   $(".bandung").fadeToggle();
          $(".bandung").slideToggle();
        });

        $("#pindahTeks").on("click", function () {
          $("#teks").animate({
            marginLeft: 120,        // untuk animate, penulisan parameterCss harus dgn camelCase
          });
        });

* Manipulasi CSS dalam jQuery ada beberapa fitur effect yang disediakan, antara lain:
    - addClass(namaClass) -> digunakan untuk 'menambahkan' satu atau lebih class ke elemen yang dipilih
    - removeClass(namaClass) -> digunakan untuk 'menghapus' satu atau lebih class dari elemen yang dipilih
    - toggleClass(namaClass) -> beralih antara 'menambah' dan 'menghapus' class dari elemen yang dipilih
    - css( css dalam bentuk object ) -> menetapkan / mengembalikan attribut style